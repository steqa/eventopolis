"""
Django settings for eventopolis project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

from . import locals_vars

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = locals_vars.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    'authentication.apps.AuthenticationConfig',
    'events_app.apps.EventsAppConfig',
    'user_profile.apps.UserProfileConfig',
    'telegram_notifications.apps.TelegramNotificationsConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_USER_MODEL = 'authentication.User'

ROOT_URLCONF = 'eventopolis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eventopolis.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': locals_vars.PG_NAME,
        'USER': locals_vars.PG_USER,
        'PASSWORD': locals_vars.PG_PASSWORD,
        'HOST': locals_vars.PG_HOST,
        'PORT': locals_vars.PG_PORT,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Staticfiles storage

if not DEBUG:
    DEFAULT_FILE_STORAGE = 'eventopolis.s3_storage.MediaStorage'
    STATICFILES_STORAGE = 'eventopolis.s3_storage.StaticStorage'

    AWS_S3_ENDPOINT_URL = 'https://' + locals_vars.AWS_S3_ENDPOINT_URL
    AWS_S3_ACCESS_KEY_ID = locals_vars.AWS_S3_ACCESS_KEY_ID
    AWS_S3_SECRET_ACCESS_KEY = locals_vars.AWS_S3_SECRET_ACCESS_KEY
    AWS_QUERYSTRING_AUTH = False

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# URLs

LOGIN_URL = '/authentication/login/'

# Email config

EMAIL_HOST = locals_vars.EMAIL_HOST
EMAIL_PORT = locals_vars.EMAIL_PORT
EMAIL_HOST_USER = locals_vars.EMAIL_HOST_USER
EMAIL_FROM_USER = locals_vars.EMAIL_FROM_USER
EMAIL_HOST_PASSWORD = locals_vars.EMAIL_HOST_PASSWORD
EMAIL_USE_SSL = True

# Account

EMAIL_ACTIVATION_TIMEOUT = 300

# Telegram Bot API

TELEGRAM_BOT_URL = locals_vars.TELEGRAM_BOT_URL
TELEGRAM_BOT_TOKEN = locals_vars.TELEGRAM_BOT_TOKEN
TELEGRAM_BOT_API_URL = f"{locals_vars.TELEGRAM_BOT_API_URL}{TELEGRAM_BOT_TOKEN}/"
